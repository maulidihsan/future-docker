version: '3'
services:
  traefik:
    image: traefik:v2.0.2
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--providers.docker.swarmMode=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=traefik-public"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - traefik-public
    deploy:
      placement:
        constraints:
          - node.role == manager
  nginx:
    image: maulidihsan/nginx-shared
    networks:
      - traefik-public
    stdin_open: true
    tty: true
    volumes:
      - "./nginx2/conf.d:/etc/nginx/conf.d"
      - "./:/opt/app"
    deploy:
      placement:
        constraints:
          - node.role == worker
      labels:
        - "type=nginx"
        - "traefik.enable=true"
        - "traefik.http.routers.nginx.rule=HostRegexp(`{subdomain:[a-z]+}.website.ku`)"
        - "traefik.http.routers.nginx.entrypoints=web"
        - "traefik.http.services.nginx.loadbalancer.server.port=80"
  php-fpm:
    image: maulidihsan/php-fpm
    networks:
      - traefik-public
    volumes:
      - "./:/opt/app"
    stdin_open: true
    tty: true
    deploy:
      placement:
        constraints:
          - node.role == worker
  redis:
    image: maulidihsan/redis
    networks:
      - traefik-public
    deploy:
      placement:
        constraints:
          - node.role == worker
networks:
  traefik-public:
    external: true

